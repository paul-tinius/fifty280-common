ext.versions = [
        // dependency versions
        'apache_lang3'   : '3.10',
        'jakarta_ws_rs'  : '2.1.6',
        'jakarta_servlet': '4.0.4',
        'jersey_common'  : '2.34',
        'slf4j'          : '1.7.30',

        // test dependency versions
        'assertj'        : '3.16.1',
        'jupiter'        : '5.6.2',
        'mockito'        : '3.3.3',
]

ext.libs = [
        /**
         * Apache Commons Lang, a package of Java utility classes for the classes that are in java.lang's hierarchy,
         * or are considered to be so standard as to justify existence in java.lang.
         *
         * @link https://github.com/apache/commons-lang
         * @license Apache License 2.0 [https://www.apache.org/licenses/LICENSE-2.0]
         */
        'apache_lang3': "org.apache.commons:commons-lang3:$rootProject.versions.apache_lang3",

        /**
         * Jakarta Servlet defines a server-side API for handling HTTP requests and responses.
         *
         * @link https://github.com/eclipse-ee4j/servlet-api
         * @license Eclipse Public License 2.0 [https://projects.eclipse.org/license/epl-2.0]
         */
        'servlet_api' : "jakarta.servlet:jakarta.servlet-api:$rootProject.versions.jakarta_servlet",

        /**
         * The Simple Logging Facade for Java (SLF4J) serves as a simple facade or abstraction for various logging
         * frameworks (e.g. java.util.logging, logback, log4j) allowing the end user to plug in the desired logging
         * framework at deployment time.
         *
         * @link http://www.slf4j.org
         * @license MIT License [http://www.slf4j.org/license.html]
         */
        'slf4j'       : "org.slf4j:slf4j-api:$rootProject.versions.slf4j",

        /**
         * Jakarta RESTful Web Services provides a specification document, TCK and foundational API to develop web
         * services following the Representational State Transfer (REST) architectural pattern.
         *
         * JAX-RS: Java API for RESTful Web Services (JAX-RS) is a Java programming language API spec that provides
         * support in creating web services according to the Representational State Transfer (REST) architectural pattern.
         *
         * @link https://github.com/eclipse-ee4j/jaxrs-api
         * @license Eclipse Public License 2.0 [https://projects.eclipse.org/license/epl-2.0]
         */
        'wsrs_api'    : "jakarta.ws.rs:jakarta.ws.rs-api:$rootProject.versions.jakarta_ws_rs",
]

ext.testLibs = [
        /**
         * AssertJ is a java library providing a rich set of assertions, truly helpful error messages, improves test code
         * readability and is designed to be super easy to use within your favorite IDE.
         *
         * @link https://assertj.github.io/doc/
         * @license Apache License 2.0 [https://github.com/assertj/doc/blob/master/LICENSE]
         */
        'assertj'        : "org.assertj:assertj-core:$rootProject.versions.assertj",

        /**
         * Jersey core common packages
         *
         * @link https://github.com/eclipse-ee4j/jersey/tree/master/core-common
         * @license Eclipse Public License 2.0 [https://github.com/eclipse-ee4j/jersey/blob/master/LICENSE.md]
         */
        'jersey_common'  : "org.glassfish.jersey.core:jersey-common:$rootProject.versions.jersey_common",

        /**
         * Framework to write repeatable tests.
         *
         * @link https://github.com/junit-team/junit5
         * @license Eclipse Public License 1.0 [https://github.com/junit-team/junit5/blob/master/LICENSE-notice.md]
         */
        'jupiter'        : "org.junit.jupiter:junit-jupiter:$rootProject.versions.jupiter",
        'jupiter_api'    : "org.junit.jupiter:junit-jupiter-api:$rootProject.versions.jupiter",
        'jupiter_engine' : "org.junit.jupiter:junit-jupiter-engine:$rootProject.versions.jupiter",
        'platform_runner': "org.junit.jupiter:junit-platform-runner:$rootProject.versions.jupiter",
        'vintage_engine' : "org.junit.vintage:junit-vintage-engine:$rootProject.versions.jupiter",

        /**
         * Tasty mocking framework for unit tests.
         *
         * @link http://site.mockito.org/
         * @license MIT License [https://github.com/mockito/mockito/blob/master/LICENSE]
         */
        'mockito'        : "org.mockito:mockito-core:$rootProject.versions.mockito",
        'mockito_jupiter': "org.mockito:mockito-junit-jupiter:$rootProject.versions.mockito",

        /**
         * The Simple Logging Facade for Java (SLF4J) serves as a simple facade or abstraction for various logging
         * frameworks (e.g. java.util.logging, logback, log4j) allowing the end user to plug in the desired logging
         * framework at deployment time.
         *
         * @link http://www.slf4j.org
         * @license MIT License [http://www.slf4j.org/license.html]
         */
        'slf4j_simple'   : "org.slf4j:slf4j-simple:$rootProject.versions.slf4j",
]
